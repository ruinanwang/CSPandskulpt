// Generated by CoffeeScript 1.12.4
(function() {
  var PictureTool;

  PictureTool = (function() {
    function PictureTool(widgetSelector) {
      this.widget = $(widgetSelector);
      this.widget.modal({
        backdrop: false,
        keyboard: true,
        show: false
      });
      this.widget.draggable({
        handle: '.modal-header'
      });
      this.body = $('.modal-body', this.widget);
    }

    PictureTool.prototype.addEventListeners = function() {
      return $(this.canvas).mousemove((function(_this) {
        return function(e) {
          var b, colordata, ctx, g, r, rgb, x, y;
          x = e.offsetX;
          y = e.offsetY;
          $('#canvas-x', _this.widget).val(x);
          $('#canvas-y', _this.widget).val(y);
          ctx = _this.canvas.getContext('2d');
          colordata = ctx.getImageData(x, y, 1, 1).data;
          r = colordata[0];
          g = colordata[1];
          b = colordata[2];
          rgb = 'rgb(' + r + ', ' + g + ', ' + b + ')';
          $('#canvas-red', _this.widget).text(r);
          $('#canvas-green', _this.widget).text(g);
          $('#canvas-blue', _this.widget).text(b);
          return $('#canvas-color-swatch', _this.widget).css('background-color', rgb);
        };
      })(this));
    };

    PictureTool.prototype.show = function(arg) {
      var _this;
      _this = this;
      if (typeof arg === 'string') {
        return $('<img></img>').load(function() {
          var canvas, ctx;
          canvas = document.createElement('canvas');
          canvas.width = this.naturalWidth;
          canvas.height = this.naturalHeight;
          ctx = canvas.getContext('2d');
          ctx.drawImage(this, 0, 0);
          _this.canvas && $(_this.canvas).off('mousemove');
          _this.canvas = canvas;
          _this.body.empty().append(_this.canvas);
          _this.widget.modal('show');
          _this.widget.css('marginLeft', '-' + (_this.canvas.width + 30) / 2 + 'px');
          return _this.addEventListeners(_this.canvas);
        }).attr('src', arg);
      } else {
        this.canvas && $(this.canvas).off('mousemove');
        this.canvas = arg;
        this.body.empty().append(this.canvas);
        this.widget.modal('show');
        this.widget.css('marginLeft', '-' + (this.canvas.width + 30) / 2 + 'px');
        return this.addEventListeners(this.canvas);
      }
    };

    PictureTool.prototype.hide = function() {
      return this.widget.modal('hide');
    };

    return PictureTool;

  })();

  addEventListener('load', function() {
    return window.pythy.pictureTool = new PictureTool('#Sk-canvasModal');
  });

}).call(this);
